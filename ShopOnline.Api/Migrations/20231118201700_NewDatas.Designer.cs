// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOnline.Api.Data;

#nullable disable

namespace ShopOnline.Api.Migrations
{
    [DbContext(typeof(ShopOnlineDbContext))]
    [Migration("20231118201700_NewDatas")]
    partial class NewDatas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopOnline.Api.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Gel de curatare de la CeraVe pentru tenul sensibil.",
                            ImageURL = "/Images/Beauty/Beauty1.jpg",
                            Name = "CeraVe - Gel de curatare",
                            Price = 40m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Crema hidratanta de la CeraVe pentru ten uscat.",
                            ImageURL = "/Images/Beauty/Beauty2.jpg",
                            Name = "CeraVe - Crema hidratanta",
                            Price = 50m,
                            Qty = 45
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Crema cu factor de protectie 50 de la Avene.",
                            ImageURL = "/Images/Beauty/Beauty3.png",
                            Name = "Avene - SPF",
                            Price = 70m,
                            Qty = 30
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Spray parfumat de corp de la Victoria Secrets.",
                            ImageURL = "/Images/Beauty/Beauty4.jpg",
                            Name = "Spray Victoria Secrets",
                            Price = 100m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Crema cu factor de protectie 50 de la SVR.",
                            ImageURL = "/Images/Beauty/Beauty5.jpg",
                            Name = "SVR - SPF",
                            Price = 50m,
                            Qty = 85
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Casti JBL roz",
                            ImageURL = "/Images/Electronic/Electronics1.jpg",
                            Name = "Casti JBL",
                            Price = 100m,
                            Qty = 120
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Casti JBL negre",
                            ImageURL = "/Images/Electronic/Electronics2.jpg",
                            Name = "Casti JBL",
                            Price = 40m,
                            Qty = 200
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Casti JBL mov",
                            ImageURL = "/Images/Electronic/Electronics3.jpg",
                            Name = "Casti JBL",
                            Price = 40m,
                            Qty = 300
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Aparat profesional Canon",
                            ImageURL = "/Images/Electronic/Electronic4.jpg",
                            Name = "Aparat Canon",
                            Price = 600m,
                            Qty = 20
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "Camera de facut poze instant",
                            ImageURL = "/Images/Electronic/Electronic5.jpg",
                            Name = "Instant Camera",
                            Price = 500m,
                            Qty = 15
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Camera de facut poze instant Canon",
                            ImageURL = "/Images/Electronic/technology6.jpg",
                            Name = "Camera instant Canon",
                            Price = 100m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "Canapea eleganta roz",
                            ImageURL = "/Images/Furniture/Furniture1.jpg",
                            Name = "Canapea roz",
                            Price = 50m,
                            Qty = 212
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Canapea sufragerie bej",
                            ImageURL = "/Images/Furniture/Furniture2.jpg",
                            Name = "Canapea bej",
                            Price = 50m,
                            Qty = 112
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "Canapea sufragerie roz",
                            ImageURL = "/Images/Furniture/Furniture3.jpg",
                            Name = "Canapea roz",
                            Price = 70m,
                            Qty = 90
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Canapea eleganta neagra",
                            ImageURL = "/Images/Furniture/Furniture4.jpg",
                            Name = "Canapea neagra",
                            Price = 120m,
                            Qty = 95
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "Canapea alba pentru hol",
                            ImageURL = "/Images/Furniture/Furniture6.jpg",
                            Name = "Canapea alba",
                            Price = 15m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Description = "Canapea albastra pentru hol/sufragerie",
                            ImageURL = "/Images/Furniture/Furniture7.jpg",
                            Name = "Canapea albastra",
                            Price = 20m,
                            Qty = 73
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            Description = "Nike shoes roz pentru femei",
                            ImageURL = "/Images/Shoes/Shoes1.jpg",
                            Name = "Nike Adidasi roz",
                            Price = 100m,
                            Qty = 50
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            Description = "Nike shoes albi pentru femei",
                            ImageURL = "/Images/Shoes/Shoes2.jpg",
                            Name = "Nike Adidasi albi",
                            Price = 150m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Description = "Nike shoes roz inchis pentru femei",
                            ImageURL = "/Images/Shoes/Shoes3.jpg",
                            Name = "Nike Adidasi roz inchis",
                            Price = 200m,
                            Qty = 70
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            Description = "Nike pinky shoes pentru femei",
                            ImageURL = "/Images/Shoes/Shoes4.jpg",
                            Name = "Nike Adidasi roz",
                            Price = 120m,
                            Qty = 120
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 4,
                            Description = "Nike shoes albi cu logo verde pentru femei",
                            ImageURL = "/Images/Shoes/Shoes5.jpg",
                            Name = "Nike Adidasi alb si verde",
                            Price = 200m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Description = "Nike shoes roz cu portocaliu pentru femei",
                            ImageURL = "/Images/Shoes/Shoes6.jpg",
                            Name = "Nike Adidasi portocalii",
                            Price = 50m,
                            Qty = 150
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Shoes"
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Andrei"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "Ana"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
